// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel[0..2]=address[0..2],a=r0,b=r1,c=r2,d=r3,e=r4,f=r5,g=r6,h=r7);
    Register(in[0..15]=in[0..15],load=r0,out[0..15]=o0) ;
    Register(in[0..15]=in[0..15],load=r1,out[0..15]=o1) ;
    Register(in[0..15]=in[0..15],load=r2,out[0..15]=o2) ;
    Register(in[0..15]=in[0..15],load=r3,out[0..15]=o3) ;
    Register(in[0..15]=in[0..15],load=r4,out[0..15]=o4) ;
    Register(in[0..15]=in[0..15],load=r5,out[0..15]=o5) ;
    Register(in[0..15]=in[0..15],load=r6,out[0..15]=o6) ;
    Register(in[0..15]=in[0..15],load=r7,out[0..15]=o7) ;
    Mux8Way16(a=o0,b=o1,c=o2,d=o3,e=o4,f=o5,g=o6,h=o7,sel=address,out=out) ;





}